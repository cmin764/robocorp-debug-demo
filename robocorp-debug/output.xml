<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.9.13 on darwin)" generated="20230418 18:19:00.039" rpa="true" schemaversion="3">
<suite id="s1" name="Simple-Tasks" source="/Users/cmin/Repos/robocorp-debug-demo/robocorp-debug/simple-tasks.robot">
<test id="s1-t1" name="Concatenate Strings" line="8">
<kw name="Split String" library="String">
<var>@{words}</var>
<arg>apple orange banana</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230418 18:19:00.138" level="INFO">@{words} = [ apple | orange | banana ]</msg>
<status status="PASS" starttime="20230418 18:19:00.136" endtime="20230418 18:19:00.140"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${string}</var>
<arg>SEPARATOR=,</arg>
<arg>@{words}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230418 18:19:00.143" level="INFO">${string} = apple,orange,banana</msg>
<status status="PASS" starttime="20230418 18:19:00.141" endtime="20230418 18:19:00.143"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Console: ${string}</arg>
<doc>Logs the given message to the console.</doc>
<kw name="Replace String" library="String">
<arg>${string}</arg>
<arg>kiwi</arg>
<arg>straw</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" starttime="20230418 18:19:00.260" endtime="20230418 18:19:00.261"/>
</kw>
<status status="PASS" starttime="20230418 18:19:00.144" endtime="20230418 18:19:08.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${string}</arg>
<doc>Logs the given message with the given level.</doc>
<kw name="Replace String" library="String">
<arg>${string}</arg>
<arg>kiwi</arg>
<arg>straw</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" starttime="20230418 18:19:08.699" endtime="20230418 18:19:08.700"/>
</kw>
<msg timestamp="20230418 18:19:09.518" level="INFO">apple,orange,banana</msg>
<status status="PASS" starttime="20230418 18:19:08.618" endtime="20230418 18:19:09.519"/>
</kw>
<kw name="Replace String" library="String">
<var>${string}</var>
<arg>${string}</arg>
<arg>apple</arg>
<arg>kiwi</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<kw name="Replace String" library="String">
<arg>${string}</arg>
<arg>kiwi</arg>
<arg>straw</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" starttime="20230418 18:19:09.613" endtime="20230418 18:19:09.614"/>
</kw>
<msg timestamp="20230418 18:19:14.547" level="INFO">${string} = kiwi,orange,banana</msg>
<status status="PASS" starttime="20230418 18:19:09.520" endtime="20230418 18:19:14.549"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Console: ${string}</arg>
<doc>Logs the given message to the console.</doc>
<kw name="Replace String" library="String">
<arg>${string}</arg>
<arg>kiwi</arg>
<arg>straw</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" starttime="20230418 18:19:14.635" endtime="20230418 18:19:14.636"/>
</kw>
<kw name="Replace String" library="String">
<arg>${string}</arg>
<arg>kiwi</arg>
<arg>straw</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" starttime="20230418 18:19:30.044" endtime="20230418 18:19:30.046"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230418 18:21:49.724" level="FAIL">Keyword 'String.Get Regexp Matches' expected at least 2 arguments, got 0.</msg>
<status status="FAIL" starttime="20230418 18:21:49.722" endtime="20230418 18:21:49.724"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${string}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230418 18:21:57.148" level="FAIL">Keyword 'String.Get Regexp Matches' expected at least 2 arguments, got 1.</msg>
<status status="FAIL" starttime="20230418 18:21:57.147" endtime="20230418 18:21:57.149"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${string}</arg>
<arg>.+a</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230418 18:22:21.551" endtime="20230418 18:22:21.552"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${string}</arg>
<arg>.+?a</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230418 18:22:37.279" endtime="20230418 18:22:37.281"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${string}</arg>
<arg>.+a,</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230418 18:22:49.844" endtime="20230418 18:22:49.846"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${string}</arg>
<arg>.+?a,</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230418 18:23:01.983" endtime="20230418 18:23:01.985"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${string}</arg>
<arg>an</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230418 18:23:21.540" endtime="20230418 18:23:21.542"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${string}</arg>
<arg>banana</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230418 18:23:29.300" endtime="20230418 18:23:29.302"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${string}</arg>
<arg>bananaa</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230418 18:23:32.764" endtime="20230418 18:23:32.766"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${string}</arg>
<arg>,banana</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230418 18:23:37.700" endtime="20230418 18:23:37.702"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${string}</arg>
<arg>\w+</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230418 18:24:27.543" endtime="20230418 18:24:27.546"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${string}</arg>
<arg>\\w+</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230418 18:24:32.563" endtime="20230418 18:24:32.564"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${string}</arg>
<arg>\\w+a</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230418 18:24:42.439" endtime="20230418 18:24:42.441"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${string}</arg>
<arg>\\w+a,$</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230418 18:24:51.554" endtime="20230418 18:24:51.556"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${string}</arg>
<arg>\\w+a\,$</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230418 18:24:55.062" endtime="20230418 18:24:55.065"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${string}</arg>
<arg>\\w+a\\,$</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230418 18:24:57.815" endtime="20230418 18:24:57.817"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${string}</arg>
<arg>\\w+a,</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230418 18:25:01.134" endtime="20230418 18:25:01.136"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${string}</arg>
<arg>\\w+a</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230418 18:25:09.049" endtime="20230418 18:25:09.050"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${string}</arg>
<arg>\\w+a$</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230418 18:25:21.460" endtime="20230418 18:25:21.462"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${string}</arg>
<arg>\\w+e$</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230418 18:25:28.048" endtime="20230418 18:25:28.051"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${string}</arg>
<arg>\\w+(e|a)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230418 18:25:38.501" endtime="20230418 18:25:38.504"/>
</kw>
<status status="PASS" starttime="20230418 18:19:14.550" endtime="20230418 18:26:15.025"/>
</kw>
<status status="PASS" starttime="20230418 18:19:00.133" endtime="20230418 18:26:15.027"/>
</test>
<doc>Simple debugging demo while playing with strings.</doc>
<status status="PASS" starttime="20230418 18:19:00.050" endtime="20230418 18:26:15.029"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tasks</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Simple-Tasks">Simple-Tasks</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
